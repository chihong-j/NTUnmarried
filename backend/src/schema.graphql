scalar Upload

type Query {
    user(id: ID!): User!
}

type Mutation {
    updateUser(email: String!, name: String, gender: Boolean, age: Int): User!
    uploadFile(file: Upload!, userId: ID!): String!
    createMessage(from: String!, to: String!, message: String!): Message!
    createChatBox(email1: String, email2: String): ChatBox!
    createLike(from: String!, to: String!): User!
    signup(email: String!, name: String!, gender: Boolean!, age: Int!, password: String): User!
    login(email: String!, password: String): Token!
}

type Subscription {
    message(from: String!, to: String!): MessageSubscriptionPayload!
    like(from: String!, to: String!): LikeSubscriptionPayload!
}


type User {
    id: ID!,
    email: String!
    name: String!,
    gender: Boolean!,
    age: Int!
    images: [String!]
}

type Token {
    token: String!
}

type ChatBox {
  id: ID!
  name: String!
  messages: [Message!]
}

type Message {
  id: ID!
  sender: User!
  body: String!
}